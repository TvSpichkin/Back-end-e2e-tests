import экспресс, {Response, Router} from "express";
import {типСвязиИсслЧаст, типБД} from "../../бд/бд";
import {МодВидаСвязи} from "./модели/МодВидаСвязи";
//import {МодЗапрИссл} from "./модели/МодЗапрИссл";
import {МодСоздСвязи} from "./модели/МодСоздСвязи";
//import {МодОбновИссл} from "./модели/МодОбновИссл";
//import {МодУИРПарамовИдИссл} from "./модели/МодУИРПарамовИдИссл";
import {ЗапросСПарами, ЗапросСТелом, ЗапросСВопросом, ЗапросСПарамиИТелом} from "../../типы";


function провОшибокВводаСущн(запр: ЗапросСТелом<МодСоздСвязи>, отв: Response): boolean {
    if((!запр.body.идИссл || typeof запр.body.идИссл !== "number")
        || (!запр.body.идЧаст || typeof запр.body.идЧаст !== "number")) {
        отв.sendStatus(400);
        return true;
    }
    return false;
}

function бдВвид(бдСущн: типСвязиИсслЧаст, имя: string, част: string): МодВидаСвязи {
    return {
        идИссл: бдСущн.идИссл,
        идЧаст: бдСущн.идЧаст,
        имяИссл: имя,
        названиеЧаст: част
    };
}

export function полМаршСвязей(бд: типБД): Router {
    const марш = экспресс.Router();
    
    /*марш.get(encodeURI("/"), (запр: ЗапросСВопросом<МодЗапрИссл>, отв: Response<МодВидаСвязи[]>) => {
        var найдСущн = бд.исследователи;
        //console.log("запр.query.имя = " + запр.query.имя);
        if(запр.query.имя) найдСущн = найдСущн.filter(ч => ч.имя.indexOf(запр.query.имя) > -1);

        отв.json(найдСущн.map(бдВвид));
    });
    марш.get(encodeURI("/:id"), (запр: ЗапросСПарами<МодУИРПарамовИдИссл>, отв: Response<МодВидаСвязи>) => {
        const найдСущн = бд.исследователи.find(ч => ч.ид === +запр.params.id);

        if(!найдСущн) {
            отв.sendStatus(404);
            return 404;
        }

        отв.json(бдВвид(найдСущн));
    });*/
    марш.post(encodeURI("/"), (запр: ЗапросСТелом<МодСоздСвязи>, отв: Response<МодВидаСвязи>) => {
        if(провОшибокВводаСущн(запр, отв)) return 400;

        const иссл = бд.исследователи.find(и => и.ид === запр.body.идИссл);
        const част = бд.частицы.find(ч => ч.ид === запр.body.идЧаст);

        if(!иссл || !част) {
            отв.sendStatus(404);
            return 404;
        }

        const ужеСущСвязь = бд.связьИсслЧаст.find(с => с.идИссл === иссл.ид && с.идЧаст === част.ид);

        if(ужеСущСвязь) {
            отв.sendStatus(400);
            return 400;
        }

        const добСвязь = {
            идИссл: иссл.ид,
            идЧаст: част.ид,
            дата: new Date()
        };

        бд.связьИсслЧаст.push(добСвязь);

        отв.status(201).json(бдВвид(добСвязь, иссл.имя, част.название));
    });
    /*марш.delete(encodeURI("/:id"), (запр: ЗапросСПарами<МодУИРПарамовИдИссл>, отв: Response) => {
        const найдСущн = бд.исследователи.find(ч => ч.ид === +запр.params.id);

        if(!найдСущн) {
            отв.sendStatus(404);
            return 404;
        }

        бд.исследователи = бд.исследователи.filter(ч => ч.ид !== +запр.params.id);

        отв.sendStatus(204);
    });
    марш.put(encodeURI("/:id"), (запр: ЗапросСПарамиИТелом<МодУИРПарамовИдИссл, МодОбновИссл>, отв: Response) => {
        if(провОшибокВводаСущн(запр, отв)) return 400;

        const найдСущн = бд.исследователи.find(ч => ч.ид === +запр.params.id);

        if(!найдСущн) {
            отв.sendStatus(404);
            return 404;
        }

        найдСущн.имя = запр.body.имя;

        отв.sendStatus(204);
    });*/

    return марш;
}
